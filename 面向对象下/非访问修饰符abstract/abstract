/*
 * abstract 关键字的使用
 * 抽象类只是不想让自己创建对象
 * 1.abstract:抽象的
 * 2.abstract 可以用来修饰的结构:类、方法
 * 3.abstract 修饰类:抽象类
 * 	> 此类不能实例化
 *  > 抽象类中一定有构造器，便于子类实例化时调用(涉及:子类对象实例化全过程)
 *  > 开发中，都会提供抽象类的子类，让子类对象实例化，实现相关的操作
 *  >  如果子类不是抽象类，则要重写父类和父类的父类...的抽象方法
 *
 * 4.abstract 修饰方法:抽象方法
 *  > 抽象方法，只有方法的声明，没有方法体。
 *  > 包含抽象方法的类，一定是一个抽象类。反之，抽象类中可以没有抽象方法
 *  > 若子类重写了父类中所有的抽象方法，此子类才能实例化，
 *  > 若子类没有重写父类的抽象方法，则此类是抽象类
 *  > 如果子类不是抽象类，则要重写父类和父类的父类...的抽象方法
 *
 * abstract 使用上的注意点:
 * 1.abstract 不能用来修饰变量、代码块、构造器；
 *
 * 2.abstract 不能用来修饰私有方法、静态方法、final 的方法、final 的类。
 *
 */